{"version":3,"sources":["../../../../src/popover/popover.config.ts","../../../../src/popover/popover-container.component.html","../../../../src/popover/popover-container.component.ts","../../../../src/popover/popover.directive.ts","../../../../src/popover/popover.module.ts"],"names":["this","adaptivePosition","placement","triggers","outsideClick","delay","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","PopoverConfig","factory","providedIn","Injectable","PopoverContainerComponent","config","Object","assign","defineProperty","prototype","isBs3","i0","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵprojection","i0.ɵɵproperty","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","role","style","styles","templateUrl","Input","title","id","PopoverDirective","_config","_elementRef","_renderer","_viewContainerRef","cis","_positionService","popoverId","containerClass","_isInited","_popover","createLoader","provide","useValue","onShown","onHidden","window","nativeElement","addEventListener","focus","err","isShown","value","show","hide","setAriaDescribedBy","_ariaDescribedby","isOpen","instance","setAttribute","removeAttribute","_this","popover","_delayTimeoutId","setOptions","modifiers","flip","enabled","preventOverflow","boundariesElement","showPopover","undefined","attach","to","container","position","attachment","content","context","popoverContext","popoverTitle","_componentRef","calcPosition","deletePositionElement","location","cancelDelayedTooltipShowing","_popoverCancelShowFn","_timer_1","timer","subscribe","parseTriggers","forEach","trigger","close","listen","unsubscribe","clearTimeout","toggle","ngOnInit","ngOnDestroy","dispose","ElementRef","Renderer2","ViewContainerRef","i2$1","ComponentLoaderFactory","i3","PositioningService","inputs","outputs","exportAs","Directive","Output","PopoverModule","forRoot","ngModule","providers","imports","CommonModule","declarations","exports","NgModule","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopoverConfig {\n  /** sets disable adaptive position */\n  adaptivePosition = true;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  container?: string;\n  /** delay before showing the tooltip */\n  delay = 0;\n\n  boundariesElement?:string;\n}\n","<div class=\"popover-arrow arrow\"></div>\n<h3 class=\"popover-title popover-header\" *ngIf=\"title\">{{ title }}</h3>\n<div class=\"popover-content popover-body\">\n  <ng-content></ng-content>\n</div>\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.id]': 'popoverId',\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs3.popover-top {\n      margin-bottom: 10px;\n    }\n    :host.bs3.popover.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.popover.top {\n      margin-bottom: 10px;\n    }\n    :host.popover.bottom>.arrow {\n      margin-left: -4px;\n    }\n    :host.bs3.bs-popover-left {\n      margin-right: .5rem;\n    }\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\n      margin: .3rem 0;\n    }\n    `\n  ],\n  templateUrl: './popover-container.component.html'\n})\nexport class PopoverContainerComponent {\n  @Input() placement?: string;\n  @Input() title?: string;\n  containerClass?: string;\n  popoverId?: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { parseTriggers, Trigger } from 'ngx-bootstrap/utils';\n\nlet id = 0;\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /** unique id popover - use for aria-describedby */\n  popoverId = id++;\n  /** sets disable adaptive position */\n  @Input() adaptivePosition = true;\n\n  @Input() boundariesElement?: ('viewport' | 'scrollParent' | 'window');\n  /**\n   * Content to be displayed as popover.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() popover?: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n  @Input() popoverTitle?: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto' | 'top left' | 'top right' |\n    'right top' | 'right bottom' | 'bottom right' | 'bottom left' | 'left bottom' | 'left top' = 'top';\n  /**\n   * Close popover on outside click\n   */\n  @Input() outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers = 'click';\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container?: string;\n\n  /**\n   * Css class for popover container\n   */\n  @Input() containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Delay before showing the tooltip\n   */\n  @Input() delay = 0;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<unknown>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<unknown>;\n\n  protected _popoverCancelShowFn?: () => void;\n\n  protected _delayTimeoutId?: number;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n  private _ariaDescribedby?: string;\n\n  constructor(\n    _config: PopoverConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory,\n    private _positionService: PositioningService\n  ) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n\n    Object.assign(this, _config);\n\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Set attribute aria-describedBy for element directive and\n   * set id for the popover\n   */\n  setAriaDescribedBy(): void {\n    this._ariaDescribedby = this.isOpen ? `ngx-popover-${this.popoverId}` : void 0;\n    if (this._ariaDescribedby) {\n      if (this._popover.instance) {\n        this._popover.instance.popoverId = this._ariaDescribedby;\n      }\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n    } else {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n      return;\n    }\n\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition,\n          boundariesElement: this.boundariesElement || 'scrollParent' \n        }\n      }\n    });\n\n    const showPopover = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._popover\n        .attach(PopoverContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.popover,\n          context: this.popoverContext,\n          placement: this.placement,\n          title: this.popoverTitle,\n          containerClass: this.containerClass\n        });\n\n      if (!this.adaptivePosition && this._popover._componentRef) {\n        this._positionService.calcPosition();\n        this._positionService.deletePositionElement(this._popover._componentRef.location);\n      }\n\n      this.isOpen = true;\n      this.setAriaDescribedBy();\n    };\n\n    const cancelDelayedTooltipShowing = () => {\n      if (this._popoverCancelShowFn) {\n        this._popoverCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const _timer = timer(this.delay).subscribe(() => {\n        showPopover();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        parseTriggers(this.triggers)\n          .forEach((trigger: Trigger) => {\n            if (!trigger.close) {\n              return;\n            }\n\n            this._popoverCancelShowFn = this._renderer.listen(\n              this._elementRef.nativeElement,\n              trigger.close,\n              () => {\n                _timer.unsubscribe();\n                cancelDelayedTooltipShowing();\n              }\n            );\n          });\n      }\n    } else {\n      showPopover();\n    }\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (this.isOpen) {\n      this._popover.hide();\n      this.setAriaDescribedBy();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show(),\n      hide: () => this.hide()\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._popover.dispose();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders<PopoverModule> {\n    return {\n      ngModule: PopoverModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]}
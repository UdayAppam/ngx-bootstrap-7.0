{"version":3,"sources":["../../../../src/rating/rating.config.ts","../../../../src/rating/rating.component.html","../../../../src/rating/rating.component.ts","../../../../src/rating/rating.module.ts"],"names":["this","ariaLabel","i0.ɵɵtext","i0.ɵɵtextInterpolate","RatingConfig","factory","providedIn","Injectable","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵlistener","i0","_r9_1","index_r6","ctx","index","rate","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵproperty","_c0","ctx_r2","value","RATING_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","RatingComponent","multi","changeDetection","config","max","readonly","titles","onHover","EventEmitter","onLeave","onChange","Function","prototype","onTouched","range","Object","assign","onKeydown","event","indexOf","which","preventDefault","stopPropagation","sign","ngOnInit","length","buildTemplateObjects","writeValue","Math","round","preValue","markForCheck","enter","emit","reset","registerOnChange","fn","registerOnTouched","result","i","push","title","ChangeDetectorRef","selectors","hostBindings","rf","$event","decls","vars","consts","template","i0.ɵɵattribute","Component","selector","templateUrl","providers","ChangeDetectionStrategy","OnPush","Input","customTemplate","Output","HostListener","RatingModule","forRoot","ngModule","imports","CommonModule","declarations","exports","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/** Default values provider for rating */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RatingConfig {\n  /** aria label for rating */\n  ariaLabel = 'rating';\n}\n","<span (mouseleave)=\"reset()\" (keydown)=\"onKeydown($event)\" tabindex=\"0\"\n      role=\"slider\" aria-valuemin=\"0\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-valuemax]=\"range.length\"\n      [attr.aria-valuenow]=\"value\">\n  <ng-template #star let-value=\"value\" let-index=\"index\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\n  <ng-template ngFor let-r [ngForOf]=\"range\" let-index=\"index\">\n    <span class=\"sr-only\">({{ index < value ? '*' : ' ' }})</span>\n    <span class=\"bs-rating-star\"\n          (mouseenter)=\"enter(index + 1)\"\n          (click)=\"rate(index + 1)\"\n          [title]=\"r.title\"\n          [style.cursor]=\"readonly ? 'default' : 'pointer'\"\n          [class.active]=\"index < value\">\n      <ng-template [ngTemplateOutlet]=\"customTemplate || star\"\n                   [ngTemplateOutletContext]=\"{index: index, value: value}\">\n      </ng-template>\n    </span>\n  </ng-template>\n</span>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Provider,\n  TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RatingResults } from './models';\nimport { RatingConfig } from './rating.config';\n\nexport const RATING_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RatingComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'rating',\n  templateUrl: './rating.component.html',\n  providers: [RATING_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RatingComponent implements ControlValueAccessor, OnInit {\n  /** number of icons */\n  @Input() max = 5;\n  /** if true will not react on any user events */\n  @Input() readonly = false;\n  /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\n  @Input() titles: string[] = [];\n  /** custom template for icons */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() customTemplate?: TemplateRef<any>;\n  /** fired when icon selected, $event:number equals to selected rating */\n  @Output() onHover = new EventEmitter<number>();\n  /** fired when icon selected, $event:number equals to previous rating value */\n  @Output() onLeave = new EventEmitter<number>();\n\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  /** aria label for rating */\n  ariaLabel = 'rating';\n  range: RatingResults[] = [];\n  value = 0;\n  protected preValue?: number;\n\n  constructor(private changeDetection: ChangeDetectorRef, config: RatingConfig) {\n    Object.assign(this, config);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent): void {\n    if ([37, 38, 39, 40].indexOf(event.which) === -1) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    const sign = event.which === 38 || event.which === 39 ? 1 : -1;\n    this.rate(this.value + sign);\n  }\n\n  ngOnInit(): void {\n    this.max = this.max || 5;\n    this.titles =\n      typeof this.titles !== 'undefined' && this.titles.length > 0\n        ? this.titles\n        : [];\n    this.range = this.buildTemplateObjects(this.max);\n  }\n\n  // model -> view\n  writeValue(value: number): void {\n    if (value % 1 !== value) {\n      this.value = Math.round(value);\n      this.preValue = value;\n      this.changeDetection.markForCheck();\n\n      return;\n    }\n\n    this.preValue = value;\n    this.value = value;\n    this.changeDetection.markForCheck();\n  }\n\n  enter(value: number): void {\n    if (!this.readonly) {\n      this.value = value;\n      this.changeDetection.markForCheck();\n      this.onHover.emit(value);\n    }\n  }\n\n  reset(): void {\n    if (typeof this.preValue === 'number') {\n      this.value = Math.round(this.preValue);\n      this.changeDetection.markForCheck();\n      this.onLeave.emit(this.value);\n    }\n  }\n\n  registerOnChange(fn: (_: number) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  rate(value: number): void {\n    if (!this.readonly && this.range\n      && value >= 0 && value <= this.range.length) {\n      this.writeValue(value);\n      this.onChange(value);\n    }\n  }\n\n  protected buildTemplateObjects(max: number): RatingResults[] {\n    const result: RatingResults[] = [];\n\n    for (let i = 0; i < max; i++) {\n      result.push({\n        index: i,\n        title: this.titles[i] || i + 1\n      });\n    }\n\n    return result;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RatingComponent],\n  exports: [RatingComponent]\n})\nexport class RatingModule {\n  static forRoot(): ModuleWithProviders<RatingModule> {\n    return {\n      ngModule: RatingModule,\n      providers: []\n    };\n  }\n}\n"]}
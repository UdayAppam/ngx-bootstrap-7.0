{"version":3,"file":"bs-datepicker-navigation-view.component.js","sourceRoot":"","sources":["../../../../../../src/datepicker/themes/bs/bs-datepicker-navigation-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAChG,OAAO,EAAwB,qBAAqB,EAAuB,MAAM,cAAc,CAAC;;;;;IAc5F,6BAAsD;IACpD,wBAAS;IAGT,iCAGC;IADK,qMAAc,OAAO,KAAE;IAC5B,4BAAM;IAAA,YAAyB;IAAA,iBAAO;IACvC,iBAAS;IACX,0BAAe;;;IAFN,eAAyB;IAAzB,gDAAyB;;AAsBtC,MAAM,OAAO,mCAAmC;IAzChD;QA4CY,eAAU,GAAG,IAAI,YAAY,EAAyB,CAAC;QACvD,eAAU,GAAG,IAAI,YAAY,EAAwB,CAAC;KAWjE;IATC,KAAK,CAAC,IAAa;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,EAAE,CAC7D,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,QAA8B;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;;sHAdU,mCAAmC;wEAAnC,mCAAmC;QArC5C,iCAI8B;QAAtB,gHAAS,UAAM,IAAI,CAAC,IAAC;QAC3B,4BAAM;QAAA,sBAAQ;QAAA,iBAAO;QACvB,iBAAS;QAET,sGASe;QAEf,wBAAS;QAGT,iCAA6D;QAArC,gHAAS,SAAK,MAAM,CAAC,IAAC;QAC5C,4BAAM;QAAA,YAAwB;QAAA,iBAAO;QACvC,iBAAS;QAET,wBAAS;QAGT,iCAI+B;QAAvB,gHAAS,UAAM,KAAK,CAAC,IAAC;QAAC,6BAAM;QAAA,uBAAQ;QAAA,iBAAO;QACpD,iBAAS;;QAhCD,+EAAkE;QADlE,wDAAsC;QAO/B,eAAqC;QAArC,8DAAqC;QAe5C,eAAwB;QAAxB,4CAAwB;QAQxB,eAAmE;QAAnE,gFAAmE;QADnE,yDAAuC;;uFAOtC,mCAAmC;cAzC/C,SAAS;eAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCT;aACF;gBAEU,QAAQ;kBAAhB,KAAK;YAEI,UAAU;kBAAnB,MAAM;YACG,UAAU;kBAAnB,MAAM","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BsDatepickerViewMode, BsNavigationDirection, NavigationViewModel } from '../../models';\n\n@Component({\n  selector: 'bs-datepicker-navigation-view',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <button class=\"previous\"\n            [disabled]=\"calendar.disableLeftArrow\"\n            [style.visibility]=\"calendar.hideLeftArrow ? 'hidden' : 'visible'\"\n            type=\"button\"\n            (click)=\"navTo(true)\">\n      <span>&lsaquo;</span>\n    </button>\n\n    <ng-container *ngIf=\"calendar && calendar.monthTitle\">\n      &#8203;  <!-- zero-width space needed for correct alignment\n                  with preserveWhitespaces: false in Angular -->\n\n      <button class=\"current\"\n            type=\"button\"\n            (click)=\"view('month')\"\n      ><span>{{ calendar.monthTitle }}</span>\n      </button>\n    </ng-container>\n\n    &#8203;  <!-- zero-width space needed for correct alignment\n                  with preserveWhitespaces: false in Angular -->\n\n    <button class=\"current\" (click)=\"view('year')\" type=\"button\">\n      <span>{{ calendar.yearTitle }}</span>\n    </button>\n\n    &#8203;  <!-- zero-width space needed for correct alignment\n                  with preserveWhitespaces: false in Angular -->\n\n    <button class=\"next\"\n            [disabled]=\"calendar.disableRightArrow\"\n            [style.visibility]=\"calendar.hideRightArrow ? 'hidden' : 'visible'\"\n            type=\"button\"\n            (click)=\"navTo(false)\"><span>&rsaquo;</span>\n    </button>\n  `\n})\nexport class BsDatepickerNavigationViewComponent {\n  @Input() calendar!: NavigationViewModel;\n\n  @Output() onNavigate = new EventEmitter<BsNavigationDirection>();\n  @Output() onViewMode = new EventEmitter<BsDatepickerViewMode>();\n\n  navTo(down: boolean): void {\n    this.onNavigate.emit(\n      down ? BsNavigationDirection.DOWN : BsNavigationDirection.UP\n    );\n  }\n\n  view(viewMode: BsDatepickerViewMode): void {\n    this.onViewMode.emit(viewMode);\n  }\n}\n"]}
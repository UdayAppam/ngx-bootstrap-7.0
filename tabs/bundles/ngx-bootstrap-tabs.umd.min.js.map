{"version":3,"sources":["../../../../src/tabs/ng-transclude.directive.ts","../../../../src/tabs/tabset.config.ts","../../../../src/tabs/tabset.component.html","../../../../src/tabs/tabset.component.ts","../../../../src/tabs/tab.directive.ts","../../../../src/tabs/tab-heading.directive.ts","../../../../src/tabs/tabs.module.ts"],"names":["NgTranscludeDirective","viewRef","this","Object","defineProperty","prototype","_ngTransclude","templateRef","createEmbeddedView","i0","ViewContainerRef","selectors","inputs","ngTransclude","Directive","selector","Input","type","isKeysAllowed","ariaLabel","i0.ɵɵelementStart","i0.ɵɵlistener","$event","preventDefault","ctx_r4","removeTab","tabz_r1","i0.ɵɵtext","i0.ɵɵelementEnd","TabsetConfig","factory","providedIn","Injectable","i0.ɵɵtemplate","i0.ɵɵclassProp","disabled","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵattribute","active","id","i0.ɵɵtextInterpolate","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","isDestroyed","_vertical","_justified","_type","_isKeysAllowed","assign","value","setClassMap","ngOnDestroy","addTab","tab","push","length","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","click","removable","focus","lastTab","shift","i","classList","contains","firstTab","previousTab","nextTab","tabsLength","step","prevIndex","nextIndex","_a","vertical","justified","Renderer2","ElementRef","hostVars","hostBindings","rf","ctx","i0.ɵɵprojection","Component","templateUrl","styleUrls","HostBinding","TabDirective","tabset","selectTab","EventEmitter","deselect","addClass","role","_active","_customClass","customClass","_this","split","forEach","cssClass","removeClass","trim","ngOnInit","exportAs","heading","Output","ariaLabelledby","headingRef","TabHeadingDirective","TemplateRef","TabsModule","forRoot","ngModule","providers","imports","CommonModule","declarations","exports","NgModule"],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngTransclude]'\n})\nexport class NgTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _ngTransclude?: TemplateRef<any>;\n\n  @Input()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  set ngTransclude(templateRef: TemplateRef<any> | undefined) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get ngTransclude(): TemplateRef<any> | undefined {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  type = 'tabs';\n  /** provides possibility to set keyNavigations enable or disable, by default is enable */\n  isKeysAllowed = true;\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n}\n","<ul class=\"nav\" [ngClass]=\"classMap\"\n    (click)=\"$event.preventDefault()\"\n    [attr.aria-label]=\"ariaLabel\"\n    role=\"tablist\">\n  <li *ngFor=\"let tabz of tabs; let i = index\" [ngClass]=\"['nav-item', tabz.customClass || '']\"\n      [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\" (keydown)=\"keyNavActions($event, i)\">\n    <a href=\"javascript:void(0);\" class=\"nav-link\" role=\"tab\"\n       [attr.aria-controls]=\"tabz.id ? tabz.id : ''\"\n       [attr.aria-selected]=\"!!tabz.active\"\n       [attr.id]=\"tabz.id ? tabz.id + '-link' : ''\"\n       [class.active]=\"tabz.active\" [class.disabled]=\"tabz.disabled\"\n       (click)=\"tabz.active = true\">\n      <span [ngTransclude]=\"tabz.headingRef\">{{ tabz.heading }}</span>\n      <span *ngIf=\"tabz.removable\" (click)=\"$event.preventDefault(); removeTab(tabz);\" class=\"bs-remove-tab\"> &#10060;</span>\n    </a>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <ng-content></ng-content>\n</div>\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabs.scss']\n})\nexport class TabsetComponent implements OnDestroy {\n  /** if true tabs will be placed vertically */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  get justified(): boolean {\n    return this._justified;\n  }\n  set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  get isKeysAllowed(): boolean {\n    return this._isKeysAllowed;\n  }\n\n  set isKeysAllowed(value: boolean) {\n    this._isKeysAllowed = value;\n  }\n\n  @HostBinding('class.tab-container') clazz = true;\n\n  tabs: TabDirective[] = [];\n  classMap: { [key: string]: boolean } = {};\n\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n\n  protected isDestroyed = false;\n  protected _vertical = false;\n  protected _justified = false;\n  protected _type = 'tabs';\n  protected _isKeysAllowed = true;\n\n  constructor(\n    config: TabsetConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    Object.assign(this, config);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && !tab.active;\n  }\n\n  removeTab(\n    tab: TabDirective,\n    options = { reselect: true, emit: true }\n  ): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(\n        tab.elementRef.nativeElement.parentNode,\n        tab.elementRef.nativeElement\n      );\n    }\n  }\n\n    keyNavActions(event: KeyboardEvent, index: number) {\n    if (!this.isKeysAllowed) {\n      return;\n    }\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[(index) % list.length];\n      currentTab.click();\n\n      return;\n    }\n\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab: HTMLElement;\n      let shift = 1;\n\n      do {\n        nextTab = list[(index + shift) % list.length];\n\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n\n      nextTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab: HTMLElement;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n\n      previousTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n\n      let firstTab: HTMLElement;\n      let shift = 0;\n\n      do {\n        firstTab = list[shift % list.length];\n\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n\n      firstTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n\n      let lastTab: HTMLElement;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n\n      lastTab.focus();\n\n      return;\n    }\n\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n\n          return;\n        }\n\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({ selector: 'tab, [tab]', exportAs: 'tab' })\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() heading?: string;\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\n  @HostBinding('attr.id')\n  @Input() id?: string;\n  /** if true tab can not be activated */\n  @Input() disabled = false;\n  /** if true tab can be removable, additional button will appear */\n  @Input() removable = false;\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  @Input()\n  get customClass(): string {\n    return this._customClass;\n  }\n\n  set customClass(customClass: string) {\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n\n    this._customClass = customClass ? customClass.trim() : '';\n\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n\n  set active(active: boolean) {\n    if (this._active === active) {\n      return;\n    }\n    if ((this.disabled && active) || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') addClass = true;\n  @HostBinding('attr.role') role = 'tabpanel';\n  @HostBinding('attr.aria-labelledby') get ariaLabelledby(): string {\n    return this.id ? `${this.id}-link` : '';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  headingRef?: TemplateRef<any>;\n  tabset: TabsetComponent;\n  protected _active = false;\n  protected _customClass = '';\n\n  constructor(\n    tabset: TabsetComponent,\n    public elementRef: ElementRef,\n    public renderer: Renderer2\n  ) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  ngOnInit(): void {\n    this.removable = !!this.removable;\n  }\n\n  ngOnDestroy(): void {\n    this.tabset.removeTab(this, { reselect: false, emit: false });\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\n@Directive({ selector: '[tabHeading]' })\nexport class TabHeadingDirective {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  templateRef?: TemplateRef<any>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './ng-transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgTranscludeDirective,\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective\n  ],\n  exports: [\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective,\n    NgTranscludeDirective\n  ]\n})\nexport class TabsModule {\n  static forRoot(): ModuleWithProviders<TabsModule> {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n}\n"]}